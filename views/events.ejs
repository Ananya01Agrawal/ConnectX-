<%- include ("includes/header") %>

<section>
    <div class="gap gray-bg">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="row" id="page-contents">

                        <div class="col-md-3">
                            <%- include ("includes/left-sidebar") %>
                        </div>

                        <div class="col-md-8">
                            <div class="central-meta">
                                <div class="editing-info">

                                    <div class="row">
                                        <div class="col-md-4">
                                            <h5 class="f-title">
                                                <i class="ti-info-alt"></i>
                                                Events
                                            </h5>
                                        </div>

                                        <div class="col-md-8 text-right">
                                            <button class="btn btn-success" data-toggle="modal" data-target="#newEventModal">
                                                Create new event
                                            </button>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="timeline-info">
                                                <ul class="nav nav-tabs">
                                                    <li>
                                                        <a class="active" data-toggle="tab" href="#your-events">Your events</a>
                                                        <a data-toggle="tab" href="#upcoming-events">Upcoming events</a>
                                                        <a data-toggle="tab" href="#going-events">Going events</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="tab-content">
                                                <div class="tab-pane active fade show" id="your-events"></div>

                                                <div class="tab-pane fade" id="upcoming-events"></div>

                                                <div class="tab-pane fade" id="going-events"></div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal" id="newEventModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create new event</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>

            <div class="modal-body">
                <form method="POST" id="form-create-event" onsubmit="createNewEvent()" enctype="multipart/form-data">
                    <div class="form-group">
                        <input name="name" placeholder="Enter name of event" required />
                        <i class="mtrl-select"></i>
                    </div>

                    <div class="form-group">
                        <textarea name="description" placeholder="Enter event description (optional)" rows="5"></textarea>
                        <i class="mtrl-select"></i>
                    </div>

                    <div class="form-group">
                        <input name="location" placeholder="Enter location of event" autocomplete="off" />
                        <i class="mtrl-select"></i>
                    </div>

                    <div class="form-group" style="margin-top: 30px; margin-bottom: 30px;">
                        <input type="file" accept="image/*" name="image" />
                        <label class="control-label">Select image (if any)</label>
                        <i class="mtrl-select"></i>

                        <img id="img-preview" style="display: none; margin-top: 10px; margin-bottom: 10px;" />
                    </div>

                    <div class="form-group">
                        <input type="file" accept="video/*" name="video" />
                        <label class="control-label">Select video (if any)</label>
                        <i class="mtrl-select"></i>

                        <video id="video-preview" controls style="display: none; margin-top: 10px; margin-bottom: 10px;"></video>
                    </div>

                    <div class="form-group">
                        <input type="datetime-local" name="eventDate" placeholder="Enter date of event" required />
                        <i class="mtrl-select"></i>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" form="form-create-event" name="submit" class="btn btn-success">
                    Create event
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    const isEventsPage = true

    function deleteEvent() {
        let _id = event.target.getAttribute("data-id")

        swal({
            title: "Delete event",
            text: "Are you sure you want to delete this event ?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
        .then(function (isOkay) {
            if (isOkay) {
                const ajax = new XMLHttpRequest()
                ajax.open("POST", "/deleteEvent", true)

                ajax.onreadystatechange = function() {
                    if (this.readyState == 4) {
                        if (this.status == 200) {
                            const response = JSON.parse(this.responseText)
                            // console.log(response)
                            if (response.status == "error") {
                                swal("Error", response.message, "error")
                            } else {
                                const events = document.querySelectorAll(".event-" + _id)
                                for (let a = 0; a < events.length; a++) {
                                    events[a].remove()
                                }
                            }
                        }

                        if (this.status == 500) {
                            console.log(this.responseText)
                        }
                    }
                }

                const formData = new FormData()
                formData.append("accessToken", localStorage.getItem("accessToken"))
                formData.append("_id", _id)
                ajax.send(formData)
            }
        })
    }

    function renderSingleEvent(data) {
        var html = ""

        const dateParts = data.eventDate.split("T")
        var eventDate = new Date(dateParts[0])
        var date = eventDate.getDate() + ""
        date = date.padStart(2, "0") + " " + months[eventDate.getMonth()] + ", " + eventDate.getFullYear() + " " + dateParts[1]

        let deleteButton = ""
        if (data.user._id == window.user._id) {
            deleteButton = `<i style="cursor: pointer;" class="fa fa-trash" onclick="deleteEvent()" data-id="` + data._id + `"></i>`
        }

        html += `<div class="central-meta item event-` + data._id + `">
            <div class="user-post">
                <div class="friend-info">

                    <figure>
                        <img src="` + mainURL + `/` + data.user.profileImage + `" style="width: 45px; height: 45px; object-fit: cover;" onerror="this.src = '/public/img/default_profile.jpg';" />
                    </figure>

                    <div class="friend-name">
                        <ins>
                            <a href="/event">` + data.name + `</a>

                            <div class='actions pull-right'>
                                ` + deleteButton + `
                            </div>
                        </ins>

                        <span>` + date + `</span>
                    </div>
                </div>
            </div>
        </div>`

        return html
    }

    // <img class="post-image ` + (data.image == "" ? `hide` : ``) + `" src="` + mainURL + `/` + data.image + `" />

    // <video class="post-video ` + (data.video == "" ? `hide` : ``) + `" style="height: 359px; width: 100%;" controls src="` + mainURL + `/` + data.video + `"></video>

    function getEvents() {
        const ajax = new XMLHttpRequest()
        ajax.open("POST", "/getEvents", true)

        ajax.onreadystatechange = function() {
            if (this.readyState == 4) {
                if (this.status == 200) {
                    const response = JSON.parse(this.responseText)
                    // console.log(response)
                    if (response.status == "error") {
                        swal("Error", response.message, "error")
                    } else {

                        var html = ""
                        for (var a = 0; a < response.data.length; a++) {
                            const data = response.data[a]
                            html += renderSingleEvent(data)
                        }
                        document.getElementById("your-events").innerHTML = html

                        var html = ""
                        for (var a = 0; a < response.upcomingEvents.length; a++) {
                            const data = response.upcomingEvents[a]
                            html += renderSingleEvent(data)
                        }
                        document.getElementById("upcoming-events").innerHTML = html

                        var html = ""
                        for (var a = 0; a < response.goingEvents.length; a++) {
                            const data = response.goingEvents[a]
                            html += renderSingleEvent(data)
                        }
                        document.getElementById("going-events").innerHTML = html
                    }
                }

                if (this.status == 500) {
                    console.log(this.responseText)
                }
            }
        }

        const formData = new FormData()
        formData.append("accessToken", localStorage.getItem("accessToken"))
        ajax.send(formData)
    }

    function createNewEvent() {
        event.preventDefault()

        const form = event.target
        form.submit.innerHTML = "Loading..."
        form.submit.setAttribute("disabled", "disabled")

        const ajax = new XMLHttpRequest()
        ajax.open("POST", "/createEvent", true)

        ajax.onreadystatechange = function() {
            if (this.readyState == 4) {

                if (this.status == 200) {
                    form.submit.removeAttribute("disabled")
                    form.submit.innerHTML = "Create event"

                    var response = JSON.parse(this.responseText)
                    if (response.status == "error") {
                        swal("Error", response.message, "error")
                    } else {

                        swal("Success", response.message, "success")
                            .then(function (value) {
                                $("#newEventModal").modal("hide")

                                var html = renderSingleEvent(response.event)
                                $(html).hide().prependTo("#your-events").fadeIn(1000)
                            })
                    }
                }

                if (this.status == 500) {
                    console.log(this.responseText)
                }
            }
        }

        var formData = new FormData(form)
        formData.append("accessToken", localStorage.getItem("accessToken"))
        ajax.send(formData)
    }
</script>

<%- include ("includes/footer") %>